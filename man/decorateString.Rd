% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decorate-string.R
\name{decorateString}
\alias{decorateString}
\alias{DecoratedString}
\alias{print.DecoratedString}
\title{Decorate a plain character string}
\usage{
decorateString(
  string = character(1L),
  prefix = character(1L),
  suffix = character(1L),
  sgrSet = integer(),
  sgrReset = integer()
)

\method{print}{DecoratedString}(x, ...)
}
\arguments{
\item{string}{\verb{[character(1)]}

A character string to be decorated. It cannot be empty.}

\item{prefix}{\verb{[character(1)]}

An optional character string to append to the beginning of \code{string}.}

\item{suffix}{\verb{[character(1)]}

An optional character string to append to the end of \code{string}.}

\item{sgrSet}{\verb{[integer()]}

An optional set of ANSI SGR parameters that adds one or more styles to
\code{string}. Note that \code{prefix} and \code{suffix} also inherit these styles.}

\item{sgrReset}{\verb{[integer()]}

An optional set of ANSI SGR parameters that resets all styles previously
set by SGR parameters passed to \code{sgrSet}.

The length of \code{sgrSet} and \code{sgrReset} must always match, even if this
implies to duplicate certain parameters. Duplicates are handled internally.}

\item{x}{\verb{[DecoratedString]}

A \link[=decorateString]{DecoratedString} object to print.}

\item{...}{\verb{[any]}

Currently ignored.}
}
\value{
A \code{character(1)} of S3 class \link[=decorateString]{DecoratedString}.
}
\description{
Decorate a character string by adding a prefix and/or suffix to it, and
by setting ANSI standardized SGR (\emph{Select Graphic Rendition}) parameters
for it. These parameters are always scoped to the decorated string.
}
\section{The DecoratedString S3 class}{
 This class does very little. It has
a single \code{\link[=print]{print()}} method that conveys the object's internal value and
its appearance when printed in a terminal.
}

\examples{
## Create HTML tags.
decorateString("Here is some text.", "<p>", "</p>")

## Add ANSI styles, here bold text (SGR parameters 1 and 22).
decorateString("Here is some bold text.", sgrSet = 1L, sgrReset = 22L)

## All at once.
decorateString("Here is some bold text.", "<b>", "</b>", 1L, 22L)

}
