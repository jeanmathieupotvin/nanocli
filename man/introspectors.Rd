% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/introspectors.R
\name{introspectors}
\alias{introspectors}
\alias{isNull}
\alias{isLgl}
\alias{isInt}
\alias{isDbl}
\alias{isCpx}
\alias{isChr}
\alias{isRaw}
\alias{isAtomic}
\alias{isScalarLgl}
\alias{isScalarInt}
\alias{isScalarDbl}
\alias{isScalarCpx}
\alias{isScalarChr}
\alias{isScalarRaw}
\alias{isScalarAtomic}
\title{Introspectors}
\usage{
isNull(x)

isLgl(x, targetLength = NULL, acceptNA = TRUE)

isInt(x, targetLength = NULL, acceptNA = TRUE)

isDbl(x, targetLength = NULL, acceptNA = TRUE)

isCpx(x, targetLength = NULL, acceptNA = TRUE)

isChr(x, targetLength = NULL, acceptNA = TRUE)

isRaw(x, targetLength = NULL)

isAtomic(x, targetLength = NULL, acceptNA = TRUE)

isScalarLgl(x, acceptNA = FALSE)

isScalarInt(x, acceptNA = FALSE)

isScalarDbl(x, acceptNA = FALSE)

isScalarCpx(x, acceptNA = FALSE)

isScalarChr(x, acceptNA = FALSE)

isScalarRaw(x)

isScalarAtomic(x, acceptNA = FALSE)
}
\arguments{
\item{x}{\verb{[any]}

Object to be tested.}

\item{targetLength}{\verb{[NULL | integer(1) | double(1)]}

Expected length of \code{x}. If \code{NULL}, no length is enforced. This parameter
is automatically coerced to an \link[base:integer]{integer}.}

\item{acceptNA}{\verb{[logical(1)]}

Can \code{x} contain \link[base:NA]{NA} values? Note that it makes no sense to
check for \link[base:NA]{NA} values in a \code{\link[base:raw]{raw}} vector.

By default, \link[base:NA]{NA} are valid values, except when a scalar
value is expected.}
}
\value{
A \code{logical(1)}.
}
\description{
Check types and lengths of \R objects. Decide whether \link[base:NA]{NA}
values should be valid inputs or not.
}
\details{
\link[base:is.recursive]{Atomic types} are abbreviated for brevity:
\itemize{
\item \code{lgl} stands for \code{"logical"},
\item \code{int} stands for \code{"integer"},
\item \code{dbl} stands for \code{"double"},
\item \code{cpx} stands for \code{"complex"},
\item \code{chr} stands for \code{"character"}, and
\item \code{raw} stands for \code{"raw"}.
}

What \R sometimes call a \link[base:numeric]{numeric} is just a
\link[base:double]{double}: a \emph{double-precision vector}.
}
\section{Checking NULL values}{

A \code{NULL}'s length is always equal to 0. Therefore, \code{\link[=isNull]{isNull()}} is just
an alias to function \link[base:NULL]{is.null()}, and is provided for
convenience. Note that \code{isAtomic(NULL)} yields \code{TRUE} because \code{NULL} is
a degenerate atomic type.
}

\examples{
## Check if a vector contains 3 double values.
isDbl(c(1.0, 1.1, 1.2), 3L)

## Beware of R's implicit conversions. This yields FALSE.
isInt(c(1L, 2, 3L))

## By default, NAs are accepted in vectors.
isInt(c(1L, NA_integer_))        # TRUE
isInt(c(1L, NA_integer_), FALSE) # FALSE

## By default, scalar values cannot be NA.
isScalarInt(NA_integer_)       # FALSE
isScalarInt(NA_integer_, TRUE) # TRUE

}
